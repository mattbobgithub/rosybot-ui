/**
 * intiate the cart with the order from the api
 */


$(document)
		.ready(
				function() {

					$('#confirmMessage').hide();

					orderId = getURLParameter("ro");
					console.log(orderId);
					var postData1 = new Object();
					postData1.id = orderId;
					postData2 = JSON.stringify(postData1);
					
				    $('#payWithCard').show();

					$
							.ajax({
								type : 'POST',
								url : 'https://tn59sjpc9c.execute-api.us-east-1.amazonaws.com/dev/api/rosyorder',
								data : postData2,
								success : function(data) {

									console.log(data);

									jsonData = JSON.parse(data);
									$('#payButton').html("Pay $" + jsonData.orderTotal);
								
									// if order is paid, display paid send back to confirmation and black all fields
								
//									if (jsonData.rosyOrderStatus == 'PAID') {
//										var form = document
//										.getElementById("cardPaymentForm");
//								var elements = form.elements;
//								for (var i = 0, len = elements.length; i < len; ++i) {
//									elements[i].readOnly = true;
//									elements[i].disabled = true;
//								}
//									}
									
									//stripe functions below
									var stripePay = Stripe('pk_test_W2fKI1ypiVB8Lk8jH6Rv2bWY');
									var elementsPay = stripePay.elements();
									
									
									//first see if applepay or androidpay is present
									
								
					

										// Check the availability of the Payment Request API first.
										paymentRequest.canMakePayment().then(function(result) {
									
											$('#payButton').html("Pay $$$" + result.applePay);
											
											
										  if (result.applePay) {
console.log(result.applePay);
											    $('#payWithCard').hide();
										    prButton.mount('#payment-request-button');
										  } else {

											    $('#payWithCard').show();
										    document.getElementById('payment-request-button').style.display = 'none';
										    //if not present, just display card charge page
										    $('#payWithCard').show();
										    
							
										    
										    
										    
										  }
										});	
														

										},
										error : function(response) {

											// Handle error
											$('#confirmMessage').show();
											$('#confirmMessage')
													.text(
															'ROSY HAD A PROBLEM RETRIEVING YOUR ORDER, PLEASE TRY AGAIN.');
											var form = document
													.getElementById("cardPaymentForm");
											var elements = form.elements;
											for (var i = 0, len = elements.length; i < len; ++i) {
												elements[i].readOnly = true;
												elements[i].disabled = true;
											}
								

										},
										contentType : "application/json",
										dataType : 'json'
									});
							

								

				});






function formatPhoneNumber(s) {
  var s2 = (""+s).replace(/\D/g, '');
	  var output;
	  if(s2.length>=10){
		s2 = s2.substr(0,10);
	  var m = s2.match(/^(\d{3})(\d{3})(\d{4})$/);
	  output = m[1] + "-" + m[2] + "-" + m[3];
	  }else{
		  output = s;
	  }

	   return output;
	}




Array.prototype.move = function(from, to) {
	this.splice(to, 0, this.splice(from, 1)[0]);
};

function objectifyForm(formArray) {// serialize data function

	var returnArray = {};
	for (var i = 0; i < formArray.length; i++) {

		// find delivery date
		returnArray[formArray[i]['name']] = formArray[i]['value'];
	}
	return returnArray;
}

function getURLParameter(name) {
	return decodeURIComponent((new RegExp('[?|&]' + name + '='
			+ '([^&;]+?)(&|#|;|$)').exec(location.search) || [ null, '' ])[1]
			.replace(/\+/g, '%20'))
			|| null;
}



function convertPhoneForDisplay(phone) {
	if (phone.charAt(0) === '1') {
		phone = phone.substr(1);
	}
	return phone.replace(/(\d{3})(\d{3})(\d{4})/, "$1-$2-$3");
}

function convertPhoneForSave(phone) {
	phone = phone.replace(/\D/g, '')

	return phone;
}

var stripe = Stripe('pk_test_W2fKI1ypiVB8Lk8jH6Rv2bWY');
var elements = stripe.elements();
var paymentRequest = stripe.paymentRequest({
	  country: 'US',
	  currency: 'usd',
	  total: {
	    label: 'Rosy Order total',
	    amount: jsonData.orderTotal  * 100,
	  },
	});

var prButton = elementsPay.create('paymentRequestButton', {
	  paymentRequest: paymentRequest,
	});




/**
 * http://usejsdoc.org/
 */
/**
 * http://usejsdoc.org/
 */
