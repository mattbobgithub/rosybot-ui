/**
 * intiate the cart with the order from the api
 */
var stripe = Stripe('pk_test_W2fKI1ypiVB8Lk8jH6Rv2bWY');
var elements = stripe.elements();


var ordTot = 40;



paymentRequest = stripe.paymentRequest({
	  country: 'US',
	  currency: 'usd',
	  total: {
	    label: 'Rosy Order total',
	    amount: ordTot  * 100,
	  },
	});




function getURLParameter(name) {
	return decodeURIComponent((new RegExp('[?|&]' + name + '='
			+ '([^&;]+?)(&|#|;|$)').exec(location.search) || [ null, '' ])[1]
			.replace(/\+/g, '%20'))
			|| null;
}



var prButton = elements.create('paymentRequestButton', {
	  paymentRequest: paymentRequest,
	  style: {
		    paymentRequestButton: {
		      type: 'buy', // default: 'default'
		      theme: 'dark' , // default: 'dark'
		      height: '64px', // default: '40px', the width is always '100%'
		    },
		  },
	});


// Check the availability of the Payment Request API first.
paymentRequest.canMakePayment().then(function(result) {

	console.log(result);
	
  if (result.applePay) {

    prButton.mount('#payment-request-button');
  } else {

    document.getElementById('payment-request-button').style.display = 'none';
    // if not present, just display card charge page
    	
    	var url = document.URL;
        shortUrl=url.substring(0,url.lastIndexOf("/"));
    	
    location= shortUrl + "/payment.html?ro=" + getURLParameter("ro");
    	
    
    
    
  }
});	


paymentRequest.on('token', function(ev) {

	   apiUrl= "https://h83jr170h1.execute-api.us-east-1.amazonaws.com/stripeDevApi/api/rosyorder";
	   rOrder = getURLParameter("ro");
	  // Send the token to your server to charge it!
	  fetch(apiUrl, {
	    method: 'POST',
	    body: JSON.stringify({ro: rOrder, tok: ev.token.id})
	  })
	  .then(function() {
	    // Report to the browser that the payment was successful, prompting it
	    // to close the browser payment interface.
	    ev.complete('success');
	  })
	  .catch( function() {
		    // Report to the browser that the payment failed, prompting it to
		    // re-show the payment interface, or show an error message and close
		    // the payment interface.
		    ev.complete('fail');
		  }
	  );
	});

/**
 * http://usejsdoc.org/
 */
/**
 * http://usejsdoc.org/
 */
